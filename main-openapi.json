{
  "openapi": "3.0.4",
  "info": {
    "title": "API | v1",
    "version": "1.0.0"
  },
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "API"
        ],
        "summary": "Login",
        "description": "Login with email and password. Returns `UserReadModel` on success.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login.Credentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "UserReadModel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReadModel"
                }
              }
            }
          },
          "400": {
            "description": "ErrorResult:  `ValidationError` with details or `InvalidLoginCredentialsError`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "API"
        ],
        "summary": "Register",
        "description": "Register new user. User will receive an email with activation link.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register.Credentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "ErrorResult:  `ValidationError` with details or `EmailAlreadyTakenError`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "API"
        ],
        "summary": "Refresh",
        "description": "Refresh current user access. Returns `UserReadModel` on success.",
        "responses": {
          "200": {
            "description": "UserReadModel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReadModel"
                }
              }
            }
          },
          "400": {
            "description": "ErrorResult:  `InvalidRefreshCredentialsError`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "API"
        ],
        "summary": "Logout",
        "description": "Logout current logged in user.",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "API"
        ],
        "summary": "GetCurrentUser",
        "description": "Get current logged in user. Returns `UserReadModel`.",
        "responses": {
          "200": {
            "description": "UserReadModel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReadModel"
                }
              }
            }
          },
          "401": {
            "description": "ErrorResult:  `UnauthorizedError`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResult": {
        "required": [
          "type",
          "message"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResultDetail"
            }
          }
        }
      },
      "ErrorResultDetail": {
        "required": [
          "context",
          "messages"
        ],
        "type": "object",
        "properties": {
          "context": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Login.Credentials": {
        "title": "Login.Credentials",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Register.Credentials": {
        "title": "Register.Credentials",
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserReadModel": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "lastLoggedInAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastLoggedInAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "API"
    }
  ]
}